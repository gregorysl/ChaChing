//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChaChing.UI.ConverterReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ConverterReference.IConverterService")]
    public interface IConverterService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConverterService/NumberToEnglish", ReplyAction="http://tempuri.org/IConverterService/NumberToEnglishResponse")]
        ChaChing.UI.ConverterReference.NumberToEnglishResponse NumberToEnglish(ChaChing.UI.ConverterReference.NumberToEnglishRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IConverterService/NumberToEnglish", ReplyAction="http://tempuri.org/IConverterService/NumberToEnglishResponse")]
        System.IAsyncResult BeginNumberToEnglish(ChaChing.UI.ConverterReference.NumberToEnglishRequest request, System.AsyncCallback callback, object asyncState);
        
        ChaChing.UI.ConverterReference.NumberToEnglishResponse EndNumberToEnglish(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="NumberToEnglish", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class NumberToEnglishRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string input;
        
        public NumberToEnglishRequest() {
        }
        
        public NumberToEnglishRequest(string input) {
            this.input = input;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="NumberToEnglishResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class NumberToEnglishResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string NumberToEnglishResult;
        
        public NumberToEnglishResponse() {
        }
        
        public NumberToEnglishResponse(string NumberToEnglishResult) {
            this.NumberToEnglishResult = NumberToEnglishResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IConverterServiceChannel : ChaChing.UI.ConverterReference.IConverterService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NumberToEnglishCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public NumberToEnglishCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ChaChing.UI.ConverterReference.NumberToEnglishResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ChaChing.UI.ConverterReference.NumberToEnglishResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConverterServiceClient : System.ServiceModel.ClientBase<ChaChing.UI.ConverterReference.IConverterService>, ChaChing.UI.ConverterReference.IConverterService {
        
        private BeginOperationDelegate onBeginNumberToEnglishDelegate;
        
        private EndOperationDelegate onEndNumberToEnglishDelegate;
        
        private System.Threading.SendOrPostCallback onNumberToEnglishCompletedDelegate;
        
        public ConverterServiceClient() {
        }
        
        public ConverterServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConverterServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConverterServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConverterServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<NumberToEnglishCompletedEventArgs> NumberToEnglishCompleted;
        
        public ChaChing.UI.ConverterReference.NumberToEnglishResponse NumberToEnglish(ChaChing.UI.ConverterReference.NumberToEnglishRequest request) {
            return base.Channel.NumberToEnglish(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginNumberToEnglish(ChaChing.UI.ConverterReference.NumberToEnglishRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNumberToEnglish(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ChaChing.UI.ConverterReference.NumberToEnglishResponse EndNumberToEnglish(System.IAsyncResult result) {
            return base.Channel.EndNumberToEnglish(result);
        }
        
        private System.IAsyncResult OnBeginNumberToEnglish(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ChaChing.UI.ConverterReference.NumberToEnglishRequest request = ((ChaChing.UI.ConverterReference.NumberToEnglishRequest)(inValues[0]));
            return this.BeginNumberToEnglish(request, callback, asyncState);
        }
        
        private object[] OnEndNumberToEnglish(System.IAsyncResult result) {
            ChaChing.UI.ConverterReference.NumberToEnglishResponse retVal = this.EndNumberToEnglish(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNumberToEnglishCompleted(object state) {
            if ((this.NumberToEnglishCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NumberToEnglishCompleted(this, new NumberToEnglishCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NumberToEnglishAsync(ChaChing.UI.ConverterReference.NumberToEnglishRequest request) {
            this.NumberToEnglishAsync(request, null);
        }
        
        public void NumberToEnglishAsync(ChaChing.UI.ConverterReference.NumberToEnglishRequest request, object userState) {
            if ((this.onBeginNumberToEnglishDelegate == null)) {
                this.onBeginNumberToEnglishDelegate = new BeginOperationDelegate(this.OnBeginNumberToEnglish);
            }
            if ((this.onEndNumberToEnglishDelegate == null)) {
                this.onEndNumberToEnglishDelegate = new EndOperationDelegate(this.OnEndNumberToEnglish);
            }
            if ((this.onNumberToEnglishCompletedDelegate == null)) {
                this.onNumberToEnglishCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNumberToEnglishCompleted);
            }
            base.InvokeAsync(this.onBeginNumberToEnglishDelegate, new object[] {
                        request}, this.onEndNumberToEnglishDelegate, this.onNumberToEnglishCompletedDelegate, userState);
        }
    }
}
